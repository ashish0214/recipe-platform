plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
}


group = 'com.epam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

sourceSets {
	main.java.srcDirs = ['src/main/java']
	test.java.srcDirs = ['src/test/java']
}

repositories {
	mavenCentral()
	maven {
		url 'https://repo.spring.io/milestone'
	}
}
dependencies {
	implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
test {
	useJUnitPlatform()
	finalizedBy('jacocoTestReport')
	jacoco{
		enabled = true
		excludes = ['**/sun/*',
					'**/*$HibernateInstantiator*.class',
					'**/build/*']
	}
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required=true
		html.required=true
	}
}
